[{"title":"没想到被评论插件卡住了","url":"/2025/01/04/life-site - accessible/","content":"把waline能部署的方式基本全试过了，不是域名验证不了,就是什么没有看到云函数，难道是子域名不行吗。\n明明添加了txt记录就是验证不了，netlify部署完后也没有看到列表。是的我已经说了两次了。我到底在干嘛。\n为什么不去问人家呢，可能是该死的自尊心吧。害，真不容易。框架都没搞好呢。我说该怎么做，到底差了那一步\n最近为了弄这个熬了好几天夜，头发真的要保不住了。\n\n事以至此-先休息吧!\n\n完\n---"},{"title":"终于能访问了 先让我睡会再说吧","url":"/2025/01/01/first-post/","content":"keywords:\n- hexo\n- github\n- blog\n---\n<!—more—> \n一、Hexo 项目基础配置\nURL 与根目录配置：\n当网站部署在 https://mizore-ni.github.io/project 时，_config.yml 应如下设置：\nyaml\nurl: https://mizore-ni.github.io/project\nroot: /project/\npermalink: :year/:month/:day/:title/\n部署在根目录 https://mizore-ni.github.io 时：\nyaml\nurl: https://mizore-ni.github.io\nroot: /\npermalink: :year/:month/:day/:title/\n本地开发时（假设本地服务器地址为 http://localhost:4000）：\nyaml\nurl: http://localhost:4000\nroot: /\npermalink: :year/:month/:day/:title/\nFront - matter 示例：\nyaml\n---\ntitle: My Blog Post\ndate: 2023-01-01\ntags: [blog, example]\nlayout: post\n---\n二、资源路径相关\n本地 CSS 文件查找：\n对于本地服务器 localhost:4000 请求的 /project/css/style.css，通常在 Hexo 项目的 themes/[主题名称]/css 目录下查找 style.css 文件。\n线上 CSS 文件查找：\n若网站部署后，可能在 public/project/css 目录下找到 style.css 文件（假设基于 Hexo 生成的 public 文件夹部署）。\n其他相关路径示例：\n如 W:\\my_blog\\.deploy_git\\css 和 W:\\my_blog\\public\\css 下的 style.css 文件，.deploy_git 可能与项目部署相关，public 是 Hexo 生成静态文件的常用目录。\n三、网页显示异常排查\n字体加载问题：\n在 style.css 中，字体文件路径错误时：\ncss\n@font-face {\n  font-family: 'YourFontFamily';\n  src: url('path/to/your/font.ttf');\n}\n应确保 src 路径正确指向字体文件。\n字体格式兼容性问题，应提供多种格式：\ncss\n@font-face {\n  font-family: 'YourFontFamily';\n  src: url('path/to/your/font.woff2') format('woff2'),\n       url('path/to/your/font.woff') format('woff'),\n       url('path/to/your/font.ttf') format('ttf');\n}\nCSS 样式问题：\n文字颜色与背景颜色相同导致不可见，例如：\ncss\nbody {\n  color: #fff;\n  background-color: #fff;\n}\n应修改 color 属性，如：\ncss\nbody {\n  color: #000;\n}\n若设置了 text-hide、visibility: hidden 或 display: none 等属性导致文本隐藏，需在开发者工具中找到相关元素并修正这些属性。\n内容加载问题：\nJavaScript 脚本错误，例如：\njavascript\nconst xhr = new XMLHttpRequest();\nxhr.onreadystatechange = function () {\n  if (this.readyState === 4 && this.status === 200) {\n    const textContent = this.responseText;\n    document.getElementById('content-area').innerHTML = textContent;\n  }\n};\nxhr.open('GET', 'data.txt', true);\nxhr.send();\n---","tags":["- other"]},{"title":"Hello World","url":"/2025/01/01/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]